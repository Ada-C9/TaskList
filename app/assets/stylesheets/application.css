/*
 * This is a manifest file that'll be compiled into application.css, which will
 * include all the files listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any
 * plugin's vendor/assets/stylesheets directory can be referenced here using a
 * relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at
 * the bottom of the compiled file so the styles you add here take precedence
 * over styles defined in any other CSS/SCSS files in this directory. Styles in
 * this file should be added after the last require_* statement. It is generally
 * better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

* {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  font-size: 16pt;
  color: rgb(50, 92, 126);
  margin: 0;
  padding: 0;
/*
  border-style: solid;
  border-width: 0.25px; */

}

a {
  text-decoration: none;
}

ul {
  /* margin: 0;
  padding: 0; */
  list-style-type: none;
}

body {
 margin: 2em;
 min-width: 20em;
 max-width: 40vw;
 display: grid;
 flex-flow: column;
 /* padding: 0.5em; */
 border-style: solid;
 border-width: 1px;

}

@media only screen
and (min-device-width: 0px)
and (max-device-width: 414px)
and (-webkit-min-device-pixel-ratio: 2) {

  * {
    font-size: 6vw;
    /* font-size: 20pt; */
  }

  body {
  margin-top:  2vw;
  margin-left:  2vw;
  margin-right:  2vw;
  margin-bottom: 0vw;
  padding:  0px;
  min-width:96vw;
  }

}

nav {
  background-color: #883677;
}


nav ul {
  min-height: inherit;
  display: flex;
  /* height: 100%; */
  /* flex-basis: auto; */
  flex-flow: row nowrap;
  /* padding: 0em; */
  /* margin: 0em; */
  justify-content: flex-end;
  margin-top: -3px;
  margin-bottom: 0px;

}

.nav-list-item {
  padding-top: 0em;
  padding-left: 0em;
  padding-right: 0.5em;
  /* color: white; */
    /* border-left: 1px solid white; */
}

.nav-list-item a {
  font-size: 70%;
  color: white;
  /* border: 0.2px solid white; */
  padding-bottom: 5px;
  padding-top: 5px;
  padding-left: 5px;
  padding-right: 5px;

}

.nav-list-item a:hover {
  background-color: white;
  color: #883677;

}


.header {
  padding: 0px;
  margin: 0px;
  color: #441151;
  font-size: 150%;

/* display: flex; */
/* font-size: 120%; */

  /* height: 100%; */
}


/* nav li {
  font-size: 14pt;
} */

.tasks-list-list {
  background: rgba(202,97,195,0.25);

  /* display: flex;
  flex-flow: column; */
}

.tasks-list-task {
  border-top: 0.5px solid #883677;
  padding-top: 5px;
  padding-bottom: 5px;
  /* height: 0%; */
  display: grid;
  /* grid-row: nowrap; */
  /* grid-row: 2;
  grid-column: 2; */
  /* grid-template-rows: repeat(2, 1fr); */
/* color: red; */
  grid-template-columns: 1fr 1fr;
  /* grid-template-rows: 2em 2em; */
  grid-template-areas:
  "task-name task-name"
  "task-status task-due"

  /* grid-template-rows: 2 1; */

}

.tasks-list-task * {
  color:  #441151;
}



.task-name {
  grid-area: task-name;
  padding-left: 5px;

  /* color: green; */
  /* grid-column-start: 1;
  grid-column-end: 3; */
  /* padding: 0;
  margin: 0; */
}

.task-list-property {
  font-size: 70%;
    /* font-weight:lighter; */
  /* width: 30%; */
}

.task-due {

  /* grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 2;
  grid-row-start: 3; */
  grid-area: task-due;
  /* color: red; */
}

.task-status {
  grid-area: task-status;
  padding-left: 5px;
  /* grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-start: 3; */
}

/* .task-name + ul {
  margin-left: 2em;
} */
